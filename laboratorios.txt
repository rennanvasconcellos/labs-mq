########## LABORATÓRIO 000 -->  Enviando msg para topico e validando as informações chegando no tópico com uma assinatura sem persistência.

- Abra uma sessão ssh e utilize o app de teste para assinar o tópico TP.TESTE

- Execute o app de teste de leitura de tópico

python3 assinatura-topico-sem-persistente.py

- Abra uma outra sessão ssh e utilize o app de teste para publica no tópico TP.TESTE

 python3 envio-topico.py

- Verique no app de este de assinatura se a msg foi recebida corretamente

- No MQ Explorer navegue até "Assinaturas"

- Execute novamente o app de teste de assinatura "python3 assinatura-topico-sem-persistente.py" e atualize a tela de "Assinaturas" no IBM MQ Explorer

- Deve aparecer uma assinatura chamada "AssinaturaSemPersistencia". 

- Esta informaçao deve durar 10s, que é o tempo que o assinante fica na fila assinando.

- Atualize novamente a tela de "assinaturas" e irá observar que a assinatura "AssinaturaSemPersistencia" não está mais disponivel





########## LABORATÓRIO 000 -->  Enviando msg para topico e validando as informações chegando no tópico com uma assinatura COM  persistência.

- Abra uma sessão ssh e utilize o app de teste para assinar o tópico TP.TESTE

- Execute o app de teste de leitura de tópico

python3 assinatura-topico-persistente.py

- Abra uma outra sessão ssh e utilize o app de teste para publica no tópico TP.TESTE

 python3 envio-topico.py

- Verique no app de teste de assinatura se a msg foi recebida corretamente

- No MQ Explorer navegue até "Assinaturas"

- Execute novamente o app de teste de assinatura "python3 assinatura-topico-sem-persistente.py" e atualize a tela de "Assinaturas" no IBM MQ Explorer

- Deve aparecer uma assinatura chamada "AssinaturaSemPersistencia". 

- Esta informaçao deve durar 10s, que é o tempo que o assinante fica na fila assinando.


########## LABORATÓRIO 000 -->  Configurando uma fila para assinar um tópico.

- Crie uma fila chamada QL.TESTE

DEFINE QLOCAL(QL.TESTE)

- Crie um tópico chamado TP.TESTE

DEFINE TOPIC(TP.TESTE) TOPICSTR(TP.TESTE)

- Crie a assinatura chamada QL.TESTE assinando o tópico TP.TESTE

DEFINE SUB(QL.TESTE) TOPICSTR(TP.TESTE) DEST(QL.TESTE)

- Abra uma assinatura de teste no tópico TP.TESTE através do IBM MQ Explorer

 - Botão direto no tópico e escolha a opção "Testar assinatura"

- Ainda no MQ Explorer abra um teste de publicação no tópico TP.TESTE

- Botão direto no tópico e escolha a opção "Testar publicação"

- Coloque uma msg de teste

- Irá perceber que a fila QL.TESTE recebeu a msg publica no tópico devido a configuração da assintatura

- Também irá observar que o "Teste de assinatura" também recebeu a msg do tópico, pois este simula uma outra aplicação que estava assinando o tópico, sou seja,
temos dois assinantes de tópico, a fila QL.TESTE e uma aplicação assinando diretamente o tópico.




########## LABORATÓRIO 000 -->  Configuração da console web do IBM MQ

- Inicie o serviço da console web

strmqweb

- Navegue até o diretório abaixo:

cd /var/mqm/web/installations/Installation1/servers/mqweb

- Execute um backup do arquivo atual

 cp mqwebuser.xml mqwebuser.xml.bkp

- Execute a cópia do arquivo de exemplo de autenticação local substituindo o arquivo atual 

 cp /opt/mqm/web/mq/samp/configuration/basic_registry.xml /var/mqm/web/installations/Installation1/servers/mqweb/mqwebuser.xml

- Edite o arquivo mqwebuser.xml

- Descomente as tags abaixo:

 <variable name="httpHost" value="*"/>

 <variable name="httpsPort" value="9443"/>

- Salve o arquivo!

- Reicie a console web com os comandos abaixo:

endmqweb
strmqweb

- Acesse a console no endereço

https://localhost:9443/ibmmq/console



########## LABORATÓRIO 000 -->  Criação de trigger que move msg de uma fila DLQ para a fila principal ##########

- Crie o script abaixo no caminho "/tmp/move-msg-dlq.sh". 

#!/bin/bash

sleep 1

dmpmqmsg -m QM.01 -I QL.TESTE.DLQ -o QL.TESTE

- Configure permissão para execução do script 

chmod  775 /tmp/move-msg-dlq.sh

- No queue manageger QM.01 definir o processo que será executado

DEFINE PROCESS(MOVER.MSG.DLQ) APPLICID('/tmp/move-msg-dlq.sh') APPLTYPE(UNIX)

- No queue manageger QM.01 Criar fila de inicialização

DEFINE QLOCAL(INIT.QUEUE.MOVER.DLQ)

- No queue manageger QM.01 definir fila DLQ utilizando a trigger/process que move a msg para para a fila principal.

DEFINE QLOCAL(QL.TESTE.DLQ) TRIGGER TRIGTYPE(EVERY) TRIGDPTH(1) INITQ(INIT.QUEUE.MOVER.DLQ) PROCESS(MOVER.MSG.DLQ)

- Coloque uma msg de teste na fila QL.TESTE.DLQ. A msg deve ficar parada na fila .

runmqtrm -m QM.01 -q INIT.QUEUE.MOVER.DLQ

- Após ter iniciado a trigger no passo anterior repare quea msg colocada anteriormente foi movida para a fila QL.TESTE.DLQ e o promp do MQ informando a seguinte saída:

################################################################
## 5724-H72 (C) Copyright IBM Corp. 1994, 2023.                #
## IBM MQ Queue Load/Unload Utility trigger monitor started.   #
## Read    - Files:   0  Messages:1  Bytes:5                   #
## Written - Files:   0  Messages:1  Bytes:5                   #
## 06/24/2024  10:59:38 PM : End of application trigger.       #
################################################################


- Coloque novamente uma msg na fila QL.TESTE.DLQ e observe que esta novame msg será movida imediatamente para a fila QL.TESTE.DLQ e novamente a saída acima irá aparecer no log.


########## LABORATÓRIO 000 -->  Criação de trigger que executa inicia um canal sender ao cair uma msg na fila de transmissão ##########

- No queue manager QM.01 e QM.02 crie uma fila DLQ e associe ela ao seu respectivo queue manager

DEFINE QLOCAL(DLQ)

- Associe a fila no queue manager

ALTER QMGR DEADQ(DLQ)

- No queue manger QM.01 crie a fila de transmissão

DEFINE QLOCAL(QM.02) USAGE(XMITQ)

- No queue manager QM.01 crie o canal  sender para o queue manager remoto QM.02

DEFINE CHANNEL(C.QM.01.QM.02) CHLTYPE(SDR) CONNAME('localhost(1415') XMITQ(QM.02)

- No queue manager remoto QM.02 crie o canal receptor

DEFINE CHANNEL(C.QM.01.QM.02) CHLTYPE(RCVR)

- No queue manager QM.01 crie uma fila remota que aponta para a fila local no queue manager QM.02

DEFINE QREMOTE(QR.TESTE) RQMNAME(QM.02) RNAME(QL.TESTE) XMITQ(QM.02)

- Crie o script abaixo no caminho "/tmp/start-channel.sh". 

#!/bin/bash
QMGR="QM.01"
CHANNEL="C.QM.01.QM.02"

runmqsc $QMGR <<EOF
START CHANNEL($CHANNEL)
EOF

echo "Canal $CHANNEL iniciado!"

- Configure a permissão de execução para o script

chmod  775 /tmp/start-channel.sh

- Conecte no queue manager com o comando:

runmqsc QM.01

- No queue manager QM.01 crie o processo que irá executar o script de start do canal sender

DEFINE PROCESS(INICIAR.CANAL) APPLICID('/tmp/start-channel.sh') APPLTYPE(UNIX)

-Crie a fila de inicialização

DEFINE QLOCAL(INIT.CHANNEL)

- No queue manageger QM.01 altere a fila de transmissão para utilizar a fila de trigger

ALTER QLOCAL(QM.02) TRIGGER TRIGTYPE(EVERY) TRIGDPTH(1) INITQ('INIT.CHANNEL') PROCESS('INICIAR.CANAL')

-   No queue manager QM.01 garanta que o canal sender esteja com o status inativo

- No queue manageger QM.01 inicie o serviço da trigger

runmqtrm -m QM.01 -q INIT.CHANNEL

- Coloque uma mensagem na fila remota QR.TESTE no queue manager QM.01. A mensagem será enviada para o QM.02 pois a trigger inicou o canal sender após a msg trafegar na fila de transmissão. A seguinte
saida no log deve ser observad após a inserção da msg na fila QR.TESTE

#######################################################################
5724-H72 (C) Copyright IBM Corp. 1994, 2023.
Starting MQSC for queue manager QM.01.


     1 : START CHANNEL(C.QM.01.QM.02)
AMQ8018I: Start IBM MQ channel accepted.
One MQSC command read.
No commands have a syntax error.
All valid MQSC commands were processed.
Canal C.QM.01.QM.02 iniciado!
06/24/2024  11:30:42 PM : End of application trigger.
###########################################################################

- Confira se o canal C.QM.01.QM.02 está com status "running".
